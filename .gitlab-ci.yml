.mr: &mr
  if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_PROJECT_NAMESPACE == "dependabot-gitlab"'
.mr_forked: &mr_forked
  if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_PROJECT_NAMESPACE !~ /dependabot-gitlab/'
.master: &master
  if: '$CI_COMMIT_BRANCH == "master"'
.release: &release
  if: "$CI_COMMIT_TAG =~ /^v[0-9.]+$/"
.e2e_changes: &e2e_changes
  - Dockerfile
  - spec/fixture/gitlab/**/*
.docker_changes: &docker_changes
  - Dockerfile
.dependency_changes: &dependency_changes
  - Gemfile
  - Gemfile.lock

.main: &main
  - *mr
  - *master
  - *release
.fork: &fork
  - *mr_forked

# ======================================================================================================================
include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Container-Scanning.gitlab-ci.yml
  - local: .gitlab/ci/jobs.gitlab-ci.yml

# ======================================================================================================================
# Pre Stage
# ======================================================================================================================
cache-dependencies:
  extends: .cache_dependencies
  tags:
    - private
  rules: *main
cache-dependencies-fork:
  extends: .cache_dependencies
  rules: *fork

build-app-image:
  extends: .build_app_image
  tags:
    - private
  rules: *main
build-app-image-fork:
  extends: .build_app_image
  tags:
    - docker
  variables:
    FORK: "true"
  rules: *fork

build-mock-image:
  extends: .build_mock_image
  tags:
    - private
  rules:
    - *master
    - *release
    - <<: *mr
      changes: *e2e_changes
build-mock-image-fork:
  extends: .build_mock_image
  tags:
    - docker
  variables:
    FORK: "true"
  rules:
    - <<: *mr_forked
      changes: *e2e_changes

# ======================================================================================================================
# Static analysis stage
# ======================================================================================================================
rubocop:
  extends: .rubocop
  tags:
    - private
  rules: *main
rubocop-fork:
  extends: .rubocop
  rules: *fork

reek:
  extends: .reek
  tags:
    - private
  rules: *main
reek-fork:
  extends: .reek
  rules: *fork

brakeman:
  extends: .brakeman
  tags:
    - private
  rules: *main
brakeman-fork:
  extends: .brakeman
  rules: *fork

bundle-audit:
  extends: .bundle_audit
  tags:
    - private
  rules: *main
bundle-audit-fork:
  extends: .bundle_audit
  rules: *fork

dependency-scan:
  extends: .dependency_scan
  tags:
    - private
  rules:
    - *master
    - <<: *mr
      changes: *dependency_changes
dep-scanning-fork:
  extends: .dependency_scan
  rules:
    - <<: *mr_forked
      changes: *dependency_changes

container-scan:
  extends: .container_scanning
  tags:
    - private
  rules:
    - *master
    - <<: *mr
      changes: *dependency_changes
container-scan-fork:
  extends: .container_scanning
  rules:
    - <<: *mr_forked
      changes: *dependency_changes

# ======================================================================================================================
# Test Stage
# ======================================================================================================================
rspec:
  extends: .rspec
  tags:
    - private
  rules: *main
rspec-fork:
  extends: .rspec
  rules: *fork

# ======================================================================================================================
# Coverage
# ======================================================================================================================
coverage-line:
  extends: .coverage_line
  needs:
    - rspec
  tags:
    - private
  rules: *main
coverage-line-fork:
  extends: .coverage_line
  needs:
    - rspec-fork
  rules: *fork

coverage-branch:
  extends: .coverage_branch
  needs:
    - rspec
  tags:
    - private
  rules: *main
coverage-branch-fork:
  extends: .coverage_branch
  needs:
    - rspec-fork
  rules: *fork

# ======================================================================================================================
# E2E Test Stage
# ======================================================================================================================
e2e:
  extends: .e2e
  tags:
    - private
  variables:
    SETTINGS__GITHUB_ACCESS_TOKEN: $GITHUB_ACCESS_TOKEN
  rules:
    - *master
    - *release
    - <<: *mr
      changes: *e2e_changes
e2e-fork:
  extends: .e2e
  rules:
    - <<: *mr_forked
      changes: *e2e_changes

# ======================================================================================================================
# Release Stage
# ======================================================================================================================
release-image:
  stage: release
  extends: .release_runner
  tags:
    - private
  variables:
    RELEASE_IMAGE: docker.io/andrcuns/dependabot-gitlab
  script:
    - |
      apk -qq update && apk -qq add grep
      export RELEASE_VERSION=$(echo $CI_COMMIT_TAG | grep -oP 'v\K[0-9.]+')
    - |
      docker pull $CI_REGISTRY_IMAGE:$CURRENT_TAG
      docker tag $CI_REGISTRY_IMAGE:$CURRENT_TAG $RELEASE_IMAGE:$RELEASE_VERSION
      docker tag $CI_REGISTRY_IMAGE:$CURRENT_TAG $RELEASE_IMAGE:latest
      docker push $RELEASE_IMAGE:$RELEASE_VERSION && docker push $RELEASE_IMAGE:latest
  rules:
    - *release

create-gitlab-release:
  stage: release
  extends: .ruby_runner
  variables:
    SETTINGS__GITLAB_ACCESS_TOKEN: $GITLAB_ACCESS_TOKEN
  tags:
    - private
  script:
    - bundle exec rake "dependabot:gitlab_release[$CI_COMMIT_TAG]"
  rules:
    - *release

# ======================================================================================================================
# Deploy Stage
# ======================================================================================================================
deploy:
  stage: deploy
  extends: .deploy_runner
  tags:
    - private
  environment:
    name: production
    url: $DEPENDABOT_URL
  script:
    - helmfile repos
    - helmfile apply --suppress-secrets --context 10
  rules:
    - *master
    - <<: *mr
      when: manual
      allow_failure: true

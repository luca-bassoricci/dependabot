.only: &all
    - merge_request
    - master
    - tags

include:
  - local: .gitlab/ci/runners.gitlab-ci.yml

stages:
  - static analysis
  - test
  - release
  - deploy

variables:
  APP_DOCKER_IMAGE: registry.gitlab.com/dependabot-gitlab/dependabot
  GITLAB_MOCK_DOCKER_IMAGE: registry.gitlab.com/dependabot-gitlab/dependabot/gitlab-mock
  CURRENT_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  LATEST_TAG: $CI_COMMIT_REF_SLUG-latest

# ======================================================================================================================
# Pre Stage
# ======================================================================================================================
cache_gems:
  extends: .ruby_runner
  stage: .pre
  script:
    - bundle install
  cache:
    policy: pull-push
  only:
    refs:
      - merge_request
      - master
    changes:
      - Gemfile.lock

build_app_image:
  stage: .pre
  extends: .buildkit_runner
  script: |
    buildctl-daemonless.sh build \
      --frontend=dockerfile.v0 \
      --local context=. \
      --local dockerfile=. \
      --opt build-arg:COMMIT_SHA=$CI_COMMIT_SHA \
      --opt build-arg:PROJECT_URL=$CI_PROJECT_URL \
      --export-cache type=inline \
      --import-cache type=registry,ref=$APP_DOCKER_IMAGE:master-latest \
      --import-cache type=registry,ref=$APP_DOCKER_IMAGE:$LATEST_TAG \
      --output type=image,\"name=$APP_DOCKER_IMAGE:$CURRENT_TAG,$APP_DOCKER_IMAGE:$LATEST_TAG\",push=true
  only: *all

build_mock_image:
  stage: .pre
  extends: .buildkit_runner
  script: |
    buildctl-daemonless.sh build \
      --frontend=dockerfile.v0 \
      --local context=spec/gitlab_mock \
      --local dockerfile=spec/gitlab_mock \
      --export-cache type=inline \
      --import-cache type=registry,ref=$GITLAB_MOCK_DOCKER_IMAGE:master-latest \
      --import-cache type=registry,ref=$GITLAB_MOCK_DOCKER_IMAGE:$LATEST_TAG \
      --output type=image,\"name=$GITLAB_MOCK_DOCKER_IMAGE:$CURRENT_TAG,$GITLAB_MOCK_DOCKER_IMAGE:$LATEST_TAG\",push=true
  only: *all

# ======================================================================================================================
# Static analysis stage
# ======================================================================================================================
rubocop:
  extends: .ruby_runner
  stage: static analysis
  script:
    - bundle exec rubocop --parallel --color
  only: *all

reek:
  extends: .ruby_runner
  stage: static analysis
  script:
    - bundle exec reek --color --progress --force-exclusion --sort-by smelliness .
  only: *all

brakeman:
  extends: .ruby_runner
  stage: static analysis
  script:
    - bundle exec brakeman --color
  only: *all

bundle_audit:
  extends: .ruby_runner
  stage: static analysis
  script:
    - bundle exec bundle-audit check --update
  only: *all

# ======================================================================================================================
# Test Stage
# ======================================================================================================================
unit_tests:
  extends: .ruby_runner
  stage: test
  variables:
    COVERAGE: "true"
    NO_COLOR: "1"
  script:
    - bundle exec rspec --format documentation --format RspecJunitFormatter --out tmp/rspec.xml
  coverage: /COVERAGE:\s+(\d+.\d+)\%/
  artifacts:
    reports:
      cobertura: coverage/coverage.xml
      junit: tmp/rspec.xml
  only: *all

e2e_test:
  image:
    name: $APP_DOCKER_IMAGE:$CURRENT_TAG
    entrypoint: [""]
  stage: test
  services:
    - name: $GITLAB_MOCK_DOCKER_IMAGE:$CURRENT_TAG
      alias: gitlab
  variables:
    SETTINGS__GITLAB_ACCESS_TOKEN: e2e-test
    SETTINGS__GITLAB_URL: http://gitlab:4567
    RAILS_ENV: production
    GIT_STRATEGY: none
  script:
    - cd /home/dependabot
    - bundle exec rake 'dependabot:update[test-repo,bundler,/]'
  only: *all

# ======================================================================================================================
# Release Stage
# ======================================================================================================================
release:
  extends: .docker_runner
  stage: release
  variables:
    RELEASE_IMAGE: docker.io/andrcuns/dependabot-gitlab
    RELEASE_VERSION: $RELEASE_IMAGE:$CI_COMMIT_TAG
    LATEST_VERSION: $RELEASE_IMAGE:latest
  script:
    - docker pull $APP_DOCKER_IMAGE:$CURRENT_TAG
    - docker tag $APP_DOCKER_IMAGE:$CURRENT_TAG $RELEASE_VERSION
    - docker tag $APP_DOCKER_IMAGE:$CURRENT_TAG $LATEST_VERSION
    - docker push $RELEASE_VERSION && docker push $LATEST_VERSION
  only:
    - tags

# ======================================================================================================================
# Deploy Stage
# ======================================================================================================================
deploy:
  extends: .heroku_runner
  stage: deploy
  script:
    - git push heroku master
  environment:
    name: heroku
    url: https://dependabot-gitlab.herokuapp.com/
  only:
    refs:
      - master
    changes:
      - app/**/*
      - config/**/*
      - lib/**/*
      - public/**/*
      - bin/rails
      - config.ru
      - Gemfile
      - Gemfile.lock
      - Rakefile
      - Dockerfile
      - .dockerignore

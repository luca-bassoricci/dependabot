# Rule definitions
.mr: &mr
  if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
.master: &master
  if: '$CI_COMMIT_BRANCH == "master" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "web")'
.release: &release
  if: '$CI_COMMIT_TAG =~ /^v[0-9.]+$/ && $CI_PIPELINE_SOURCE == "push"'
.fork: &fork
  if: '$CI_PROJECT_ROOT_NAMESPACE != "dependabot-gitlab"'
  variables:
    FORK: "true"
.prod_deploy: &prod_deploy
  if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "web")'

# Change definitions
.e2e_changes: &e2e_changes
  - Dockerfile
  - spec/fixture/gitlab/**/*
.docker_changes: &docker_changes
  - Dockerfile
.dependency_changes: &dependency_changes
  - Gemfile
  - Gemfile.lock
.tf_changes: &tf_changes
  - terraform/**/*
.deploy_changes: &deploy_changes
  - app/**/*
  - config/**/*
  - kube/**/*
  - public/**/*
  - terraform/**/*
  - bin/rails
  - lib/tasks/dependabot.rake
  - config.ru
  - Dockerfile
  - Gemfile
  - Gemfile.lock
  - Rakefile

# Main rule
.main: &main
  - *mr
  - *master
  - *release

# ======================================================================================================================
include:
  - local: .gitlab/ci/jobs.gitlab-ci.yml

# ======================================================================================================================
# Pre Stage
# ======================================================================================================================
cache-dependencies:
  extends: .cache_dependencies
  rules: *main

terraform-init:
  extends: .tf_init
  rules:
    - <<: *fork
      when: never
    - <<: *prod_deploy
      changes: *deploy_changes
    - <<: *mr
      changes: *tf_changes

# ======================================================================================================================
# Static analysis stage
# ======================================================================================================================
rubocop:
  extends: .rubocop
  needs:
    - cache-dependencies
  rules: *main

reek:
  extends: .reek
  needs:
    - cache-dependencies
  rules: *main

brakeman:
  extends: .brakeman
  needs:
    - cache-dependencies
  rules: *main

bundle-audit:
  extends: .bundle_audit
  needs:
    - cache-dependencies
  rules: *main

dependency-scan:
  extends: .dependency_scan
  needs:
    - cache-dependencies
  rules:
    - *master
    - <<: *mr
      changes: *dependency_changes

terraform-fmt:
  extends: .tf_fmt
  needs:
    - terraform-init
  rules:
    - *master
    - <<: *mr
      changes: *tf_changes

terraform-validate:
  extends: .tf_validate
  needs:
    - terraform-init
  rules:
    - *master
    - <<: *mr
      changes: *tf_changes

# ======================================================================================================================
# Build Stage
# ======================================================================================================================
build-app-image:
  extends: .build_app_image
  tags:
    - buildkit
  rules:
    - <<: *fork
      when: never
    - *mr
    - *master
    - *release
build-app-image-fork:
  extends: .build_app_image
  rules:
    - *fork

build-mock-image:
  extends: .build_mock_image
  tags:
    - buildkit
  rules:
    - <<: *fork
      when: never
    - *master
    - *release
    - <<: *mr
      when: manual
      allow_failure: true
build-mock-image-fork:
  extends: .build_mock_image
  rules:
    - *fork

build-ruby-image:
  extends: .build_ruby_image
  rules:
    - <<: *fork
      when: never
    - <<: *mr
      changes:
        - .gitlab/ci/Dockerfile

terraform-build:
  extends: .tf_build
  needs:
    - terraform-init
    - terraform-fmt
    - terraform-validate
  rules:
    - <<: *fork
      when: never
    - <<: *prod_deploy
      changes: *deploy_changes
    - <<: *mr
      changes: *tf_changes

# ======================================================================================================================
# Test Stage
# ======================================================================================================================
rspec:
  extends: .rspec
  needs:
    - cache-dependencies
  rules:
    - *mr
    - *release
    - <<: *master
      variables:
        GENERATE_ALLURE_REPORT: "true"

e2e:
  extends: .e2e
  needs:
    - build-app-image
    - build-mock-image
  variables:
    SETTINGS__GITHUB_ACCESS_TOKEN: $GITHUB_ACCESS_TOKEN_TEST
  rules:
    - <<: *fork
      when: never
    - *mr
    - *master
    - *release

container-scan:
  extends: .container_scanning
  needs:
    - build-app-image
  rules:
    - <<: *fork
      when: never
    - *master
    - <<: *mr
      changes: *docker_changes

# ======================================================================================================================
# Reporting
# ======================================================================================================================
coverage-line:
  extends: .coverage_line
  needs:
    - rspec
  rules: *main

coverage-branch:
  extends: .coverage_branch
  needs:
    - rspec
  rules: *main

publish-allure-reports:
  extends: .allure_report
  needs:
    - rspec
  rules:
    - <<: *fork
      when: never
    - *master

# ======================================================================================================================
# Release Stage
# ======================================================================================================================
release-image:
  extends: .release_image
  dependencies: []
  rules:
    - <<: *fork
      when: never
    - *release

create-gitlab-release:
  extends: .gitlab_release
  dependencies: []
  rules:
    - <<: *fork
      when: never
    - *release

update-helm-chart:
  extends: .update_chart
  dependencies: []
  rules:
    - <<: *fork
      when: never
    - *release

update-standalone-repo:
  extends: .update_standalone
  dependencies: []
  rules:
    - <<: *fork
      when: never
    - *release

release-ruby-image:
  extends: .release_ruby_image
  dependencies: []
  rules:
    - <<: *fork
      when: never
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      changes:
        - .gitlab/ci/Dockerfile

# ======================================================================================================================
# Deploy Stage
# ======================================================================================================================
deploy:
  extends: .tf_deploy
  dependencies:
    - terraform-init
  environment:
    name: $TF_STATE_NAME
    url: https://$DEPENDABOT_HOST
    on_stop: destroy
  rules:
    - <<: *fork
      when: never
    - <<: *prod_deploy
      changes: *deploy_changes
    - <<: *prod_deploy
      when: manual

destroy:
  extends: .tf_stop
  dependencies: []
  environment:
    name: $TF_STATE_NAME
    action: stop
  rules:
    - <<: *fork
      when: never
    - <<: *prod_deploy
      when: manual
      allow_failure: true

# Rule definitions
.mr: &mr
  if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
.master: &master
  if: '$CI_COMMIT_BRANCH == "master" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "web")'
.release: &release
  if: '$CI_COMMIT_TAG =~ /^v[0-9.]+$/ && $CI_PIPELINE_SOURCE == "push"'
.fork: &fork
  if: '$CI_PROJECT_ROOT_NAMESPACE != "dependabot-gitlab"'
  variables:
    FORK: "true"
.prod_deploy: &prod_deploy
  if: '$CI_COMMIT_BRANCH == "master" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "web")'
  changes:
    - app/**/*
    - config/**/*
    - kube/**/*
    - public/**/*
    - bin/rails
    - lib/tasks/dependabot.rake
    - config.ru
    - Dockerfile
    - Gemfile
    - Gemfile.lock
    - Rakefile
.dev_deploy: &dev_deploy
  - <<: *mr
    when: manual
    allow_failure: true

# Change definitions
.e2e_changes: &e2e_changes
  - Dockerfile
  - spec/fixture/gitlab/**/*
.docker_changes: &docker_changes
  - Dockerfile
.dependency_changes: &dependency_changes
  - Gemfile
  - Gemfile.lock

# Main rule
.main: &main
  - *mr
  - *master
  - *release

# ======================================================================================================================
include:
  - local: .gitlab/ci/jobs.gitlab-ci.yml

# ======================================================================================================================
# Pre Stage
# ======================================================================================================================
cache-dependencies:
  extends: .cache_dependencies
  rules: *main

build-app-image:
  extends: .build_app_image
  tags:
    - buildkit
  rules:
    - <<: *fork
      when: never
    - *mr
    - *master
    - *release
build-app-image-fork:
  extends: .build_app_image
  rules:
    - *fork

build-mock-image:
  extends: .build_mock_image
  tags:
    - buildkit
  rules:
    - <<: *fork
      when: never
    - *master
    - *release
    - <<: *mr
      when: manual
      allow_failure: true
build-mock-image-fork:
  extends: .build_mock_image
  rules:
    - *fork

build-ruby-image:
  extends: .build_ruby_image
  rules:
    - <<: *fork
      when: never
    - <<: *mr
      changes:
        - .gitlab/ci/Dockerfile

# ======================================================================================================================
# Static analysis stage
# ======================================================================================================================
rubocop:
  extends: .rubocop
  rules: *main

reek:
  extends: .reek
  rules: *main

brakeman:
  extends: .brakeman
  rules: *main

bundle-audit:
  extends: .bundle_audit
  rules: *main

dependency-scan:
  extends: .dependency_scan
  rules:
    - *master
    - <<: *mr
      changes: *dependency_changes

container-scan:
  extends: .container_scanning
  rules:
    - *master
    - <<: *mr
      changes: *docker_changes

# ======================================================================================================================
# Test Stage
# ======================================================================================================================
rspec:
  extends: .rspec
  needs:
    - reek
    - rubocop
    - brakeman
    - bundle-audit
  rules:
    - *mr
    - *release
    - <<: *master
      variables:
        GENERATE_ALLURE_REPORT: "true"

e2e:
  extends: .e2e
  needs:
    - build-app-image
    - build-mock-image
  variables:
    SETTINGS__GITHUB_ACCESS_TOKEN: $GITHUB_ACCESS_TOKEN_TEST
  rules: *main

# ======================================================================================================================
# Reporting
# ======================================================================================================================
coverage-line:
  extends: .coverage_line
  needs:
    - rspec
  rules: *main

coverage-branch:
  extends: .coverage_branch
  needs:
    - rspec
  rules: *main

publish-allure-reports:
  extends: .allure_report
  needs:
    - rspec
  rules:
    - <<: *fork
      when: never
    - *master

# ======================================================================================================================
# Release Stage
# ======================================================================================================================
release-image:
  extends: .release_image
  rules:
    - *release

create-gitlab-release:
  extends: .gitlab_release
  rules:
    - *release

update-helm-chart:
  extends: .update_chart
  rules:
    - *release

update-standalone-repo:
  extends: .update_standalone
  rules:
    - *release

release-ruby-image:
  extends: .release_ruby_image
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      changes:
        - .gitlab/ci/Dockerfile

# ======================================================================================================================
# Deploy Stage
# ======================================================================================================================
deploy-production:
  extends: .deploy
  tags:
    - deploy
  environment:
    name: production
    url: $DEPENDABOT_URL_PRODUCTION
    on_stop: stop-production
  resource_group: production
  variables:
    DEPENDABOT_URL: $DEPENDABOT_URL_PRODUCTION
  rules:
    - *release
    - *prod_deploy

deploy-development:
  extends: .deploy
  tags:
    - private
  environment:
    name: development
    url: $DEPENDABOT_URL_DEVELOPMENT
    on_stop: stop-development
    auto_stop_in: 1d
  rules: *dev_deploy

stop-production:
  extends: .stop
  tags:
    - deploy
  environment:
    name: production
  rules:
    - <<: *release
      when: manual
      allow_failure: true
    - <<: *prod_deploy
      when: manual
      allow_failure: true

stop-development:
  extends: .stop
  tags:
    - private
  environment:
    name: development
  rules: *dev_deploy

.release_changes: &release_changes
  refs:
    - master
  changes:
    - app/**/*
    - bin/**/*
    - config/**/*
    - lib/**/*
    - public/**/*
    - config.ru
    - Gemfile
    - Gemfile.lock
    - Rakefile
    - .gitlab-ci.yml
    - Dockerfile

.ruby_runner: &ruby_runner
  image: andrcuns/ruby:2.6.6-buster-10.3
  variables:
    BUNDLE_PATH: vendor/bundle
    BUNDLE_FROZEN: "true"
    BUNDLE_SUPPRESS_INSTALL_USING_MESSAGES: "true"
    BUNDLE_WITHOUT: development
  cache:
    key:
      files:
        - Gemfile.lock
    paths:
      - vendor/bundle
    policy: pull
  only:
    - merge_request
    - master

stages:
  - test
  - release
  - deploy

cache_gems:
  extends: .ruby_runner
  stage: .pre
  script:
    - bundle install
  cache:
    policy: pull-push

rubocop:
  extends: .ruby_runner
  stage: test
  script:
    - bundle exec rubocop --parallel --color

reek:
  extends: .ruby_runner
  stage: test
  script:
    - bundle exec reek --color --progress

rspec:
  extends: .ruby_runner
  stage: test
  variables:
    COVERAGE: "true"
    NO_COLOR: "1"
  script:
    - bundle exec rspec --format documentation --format RspecJunitFormatter --out tmp/rspec.xml
  coverage: /COVERAGE:\s+(\d+.\d+)\%/
  artifacts:
    reports:
      cobertura: coverage/coverage.xml
      junit: tmp/rspec.xml

release:
  image: docker:19.03.12
  stage: release
  services:
    - docker:19.03.12-dind
  tags:
    - docker
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_BUILDKIT: "1"
    IMAGE: docker.io/andrcuns/dependabot-gitlab
    RELEASE: $IMAGE:$CI_COMMIT_SHORT_SHA
    LATEST: $IMAGE:latest
  before_script:
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
  script: |
    docker build \
      --build-arg BUILDKIT_INLINE_CACHE=1 \
      --build-arg VERSION=$CI_COMMIT_SHORT_SHA \
      --build-arg COMMIT_SHA=$CI_COMMIT_SHORT_SHA \
      --build-arg PROJECT_URL=CI_PROJECT_URL \
      --cache-from $LATEST \
      --tag $RELEASE \
      --tag $LATEST \
      .
    docker push $LATEST
    docker push $RELEASE
  only: *release_changes

deploy:
  image: finalgene/heroku-cli:7.42
  stage: deploy
  before_script:
    - apk add git
    - git fetch origin master && git checkout master
    - echo $NETRC > /root/.netrc
    - heroku git:remote -a dependabot-gitlab
  script:
    - git push heroku master
  only: *release_changes

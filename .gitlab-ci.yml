.mr: &mr
  if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_PROJECT_NAMESPACE == "dependabot-gitlab"'
.mr_forked: &mr_forked
  if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_PROJECT_NAMESPACE !~ /dependabot-gitlab/'
.master: &master
  if: '$CI_COMMIT_BRANCH == "master"'
.release: &release
  if: '$CI_COMMIT_TAG =~ /^v[0-9.]+$/'

.all: &all
  - *mr
  - *mr_forked
  - *master
  - *release

.build_image:
  stage: .pre
  extends: .buildkit_runner
  script:
    - script/build.sh $FILE_PATH $DOCKER_IMAGE

# ======================================================================================================================
# Global
# ======================================================================================================================
include:
  - local: .gitlab/ci/runners.gitlab-ci.yml

stages:
  - static analysis
  - test
  - release
  - deploy

variables:
  APP_DOCKER_IMAGE: $CI_REGISTRY_IMAGE
  GITLAB_MOCK_DOCKER_IMAGE: $CI_REGISTRY_IMAGE/gitlab-mock
  CURRENT_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  LATEST_TAG: $CI_COMMIT_REF_SLUG-latest
  CODACY_VERSION: "11.2.3"

# ======================================================================================================================
# Pre Stage
# ======================================================================================================================
cache_dependencies:
  stage: .pre
  extends: .ruby_runner
  script:
    - ./script/download-codacy.sh
  cache:
    policy: pull-push
  rules: *all

build_app_image:
  stage: .pre
  extends: .build_image
  tags:
    - private
  variables:
    FILE_PATH: .
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE
  rules:
    - *mr
    - *master
    - *release
build_app_image_fork:
  stage: .pre
  extends: .build_image
  tags:
    - docker
  variables:
    FORK: "true"
    FILE_PATH: .
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE
  rules:
    - *mr_forked

build_mock_image:
  stage: .pre
  extends: .build_image
  tags:
    - private
  variables:
    FILE_PATH: spec/gitlab_mock
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE/gitlab-mock
  rules:
    - *mr
    - *master
    - *release
build_mock_image_fork:
  stage: .pre
  extends: .build_image
  tags:
    - docker
  variables:
    FORK: "true"
    FILE_PATH: spec/gitlab_mock
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE/gitlab-mock
  rules:
    - *mr_forked

# ======================================================================================================================
# Static analysis stage
# ======================================================================================================================
rubocop:
  stage: static analysis
  extends: .ruby_runner
  script:
    - bundle exec rubocop --parallel --color
  rules: *all

reek:
  stage: static analysis
  extends: .ruby_runner
  script:
    - bundle exec reek --color --progress --force-exclusion --sort-by smelliness .
  rules: *all

brakeman:
  stage: static analysis
  extends: .ruby_runner
  script:
    - bundle exec brakeman --color
  rules: *all

bundle_audit:
  stage: static analysis
  extends: .ruby_runner
  script:
    - bundle exec bundle-audit check --update
  rules: *all

# ======================================================================================================================
# Test Stage
# ======================================================================================================================
tests:
  stage: test
  extends: .ruby_runner
  services:
    - name: bitnami/redis:6.0-debian-10
      alias: redis
    - name: bitnami/mongodb:4.4-debian-10
      alias: mongodb
  variables:
    REDIS_URL: redis://redis:6379
    MONGODB_URL: mongodb:27017
    COVERAGE: "true"
    NO_COLOR: "1"
    ALLOW_EMPTY_PASSWORD: "yes"
  script:
    - bundle exec rspec --format documentation --format RspecJunitFormatter --out tmp/rspec.xml
  after_script:
    - ./codacy-coverage-reporter-$CODACY_VERSION report -r coverage/coverage.xml
  coverage: /COVERAGE:\s+(\d+.\d+)\%/
  artifacts:
    reports:
      cobertura: coverage/coverage.xml
      junit: tmp/rspec.xml
    paths:
      - coverage/dependabot.lcov
  rules: *all

e2e_tests:
  image:
    name: $APP_DOCKER_IMAGE:$CURRENT_TAG
    entrypoint: [""]
  stage: test
  services:
    - name: $GITLAB_MOCK_DOCKER_IMAGE:$CURRENT_TAG
      alias: gitlab
  variables:
    SETTINGS__GITLAB_URL: http://gitlab:4567
    SETTINGS__GITLAB_ACCESS_TOKEN: e2e-test
    RAILS_ENV: production
    GIT_STRATEGY: none
  script:
    - cd /home/dependabot
    - bundle exec rake 'dependabot:update[test-repo,bundler,/]'
  rules: *all

# ======================================================================================================================
# Release Stage
# ======================================================================================================================
release:
  stage: release
  extends: .release_runner
  tags:
    - internal
  variables:
    RELEASE_IMAGE: docker.io/andrcuns/dependabot-gitlab
  script:
    - |
      apk -qq update && apk -qq add grep
      export RELEASE_VERSION=$(echo $CI_COMMIT_TAG | grep -oP 'v\K[0-9.]+')
    - |
      docker pull $APP_DOCKER_IMAGE:$CURRENT_TAG
      docker tag $APP_DOCKER_IMAGE:$CURRENT_TAG $RELEASE_IMAGE:$RELEASE_VERSION
      docker tag $APP_DOCKER_IMAGE:$CURRENT_TAG $RELEASE_IMAGE:latest
      docker push $RELEASE_IMAGE:$RELEASE_VERSION && docker push $RELEASE_IMAGE:latest
  rules:
    - *release

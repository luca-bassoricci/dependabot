# frozen_string_literal: true

describe "vulnerability db update", :system, type: :system, epic: :system, feature: "vulnerability db update" do
  include Support::Mocks::Github

  include_context "with system helper"

  let(:package_first) { Faker::Game.title }
  let(:package_second) { Faker::Game.title }
  let(:db_id_first) { Faker::Number.number(digits: 4) }
  let(:db_id_second) { Faker::Number.number(digits: 4) }

  let(:mock_definitions) do
    [
      vulnerability(db_id: db_id_first, package: package_first),
      vulnerability(index: false, db_id: db_id_second, package: package_second)
    ]
  end

  before do
    allow(GraphQL::Client).to receive(:new).and_return(
      GraphQL::Client.new(
        schema: Github::Graphql::Schema,
        execute: GraphQL::Client::HTTP.new("http://#{ENV['MOCK_HOST']}:8080/graphql")
      )
    )
  end

  it "updates security vulnerability database", :aggregate_failures do
    SecurityVulnerabilityUpdateJob.perform_now("nuget")

    expect(Vulnerability.where(id: db_id_first).first&.package).to eq(package_first)
    expect(Vulnerability.where(id: db_id_second).first&.package).to eq(package_second)
  end
end

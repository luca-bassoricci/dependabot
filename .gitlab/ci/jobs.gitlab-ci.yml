# ======================================================================================================================
# Runners
# ======================================================================================================================
.ruby_runner:
  image: andrcuns/ruby:2.6.6-buster-10.6
  variables:
    BUNDLE_PATH: vendor/bundle
    BUNDLE_FROZEN: "true"
    BUNDLE_SUPPRESS_INSTALL_USING_MESSAGES: "true"
    BUNDLE_WITHOUT: development
  before_script:
    - bundle install
  cache:
    key:
      files:
        - Gemfile.lock
    paths:
      - vendor/bundle
      - codacy-coverage-reporter-$CODACY_VERSION
    policy: pull

.release_runner:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_BUILDKIT: 1
  before_script:
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD

.deploy_runner:
  image: quay.io/roboll/helmfile:helm3-v0.134.1

.buildkit_runner:
  image:
    name: moby/buildkit:v0.7.2
    entrypoint: [""]
  before_script:
    - mkdir -p /root/.docker
    - |
      cat <<- EOF > /root/.docker/config.json
      {
        "auths": {
          "registry.gitlab.com": {
            "auth": "$(echo -n $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64)"
          }
        }
      }
      EOF

# ======================================================================================================================
# Jobs
# ======================================================================================================================
.cache_dependencies:
  stage: .pre
  extends: .ruby_runner
  script:
    - ./script/download-codacy.sh
  cache:
    policy: pull-push

.build_app_image:
  stage: .pre
  extends: .buildkit_runner
  variables:
    FILE_PATH: .
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE
  script:
    - script/build.sh $FILE_PATH $DOCKER_IMAGE

.build_mock_image:
  stage: .pre
  extends: .buildkit_runner
  variables:
    FILE_PATH: spec/gitlab_mock
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE/gitlab-mock
  script:
    - script/build.sh $FILE_PATH $DOCKER_IMAGE

.rubocop:
  stage: static analysis
  extends: .ruby_runner
  script:
    - bundle exec rubocop --parallel --color

.reek:
  stage: static analysis
  extends: .ruby_runner
  script:
    - bundle exec reek --color --progress --force-exclusion --sort-by smelliness .

.brakeman:
  stage: static analysis
  extends: .ruby_runner
  script:
    - bundle exec brakeman --color

.bundle_audit:
  stage: static analysis
  extends: .ruby_runner
  script:
    - bundle exec bundle-audit check --update

.tests_rspec:
  stage: test
  extends: .ruby_runner
  services:
    - name: bitnami/redis:6.0-debian-10
      alias: redis
    - name: bitnami/mongodb:4.4-debian-10
      alias: mongodb
  variables:
    REDIS_URL: redis://redis:6379
    REDIS_PASSWORD: $REDIS_PASSWORD
    MONGODB_URL: mongodb:27017
    COVERAGE: "true"
  script:
    - bundle exec rspec --format documentation --format RspecJunitFormatter --out tmp/rspec.xml
  after_script:
    - ./codacy-coverage-reporter-$CODACY_VERSION report -r coverage/coverage.xml
  coverage: /\((\d{1,3}\.\d{1,2})\%\)/
  artifacts:
    reports:
      cobertura: coverage/coverage.xml
      junit: tmp/rspec.xml
    paths:
      - coverage/dependabot.lcov
    expire_in: 7 days

.tests_standalone_version:
  image:
    name: $APP_DOCKER_IMAGE:$CURRENT_TAG
    entrypoint: [""]
  stage: test
  services:
    - name: $GITLAB_MOCK_DOCKER_IMAGE:$CURRENT_TAG
      alias: gitlab
  variables:
    SETTINGS__GITLAB_URL: http://gitlab:4567
    SETTINGS__GITLAB_ACCESS_TOKEN: e2e-test
    SETTINGS__STANDALONE: "true"
    RAILS_ENV: test
    GIT_STRATEGY: none
  script:
    - cd /home/dependabot
    - bundle exec rake 'dependabot:update[test-repo,bundler,/]'

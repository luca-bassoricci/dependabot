# Reusable rules
.mr: &mr
  if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
.core_update: &core_update
  if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_REF_NAME =~ /^dependabot-bundler-dependabot-omnibus/'
.main: &main
  if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "web")'
.release: &release
  if: '$CI_COMMIT_TAG =~ /^v[0-9.]+$/ && $CI_PIPELINE_SOURCE == "push"'
.fork: &fork
  if: '$CI_PROJECT_ROOT_NAMESPACE != "dependabot-gitlab"'

.deploy_changes: &deploy_changes
  - app/**/*
  - config/**/*
  - db/**/*
  - kube/**/*
  - lib/tasks/dependabot.rake
  - public/**/*
  - config.ru
  - Dockerfile
  - Gemfile
  - Gemfile.lock
  - Rakefile

.dependency_changes: &dependency_changes
  - Gemfile.lock
  - Dockerfile

.db_changes: &db_changes
  - db/**/*.rb

# ======================================================================================================================
# Rules
# ======================================================================================================================
.rules:main:
  rules:
    - *mr
    - *release
    - *main

.rules:release:
  rules:
    - <<: *fork
      when: never
    - *release

.rules:deploy:
  rules:
    - <<: *fork
      when: never
    - <<: *main
      changes: *deploy_changes

.rules:dependency-scan:
  rules:
    - <<: *main
      changes: *dependency_changes
    - <<: *mr
      changes: *dependency_changes

.rules:license-scan:
  rules:
    - <<: *main
      changes: *dependency_changes
    - <<: *mr
      changes: *dependency_changes

.rules:container-scan:
  rules:
    - <<: *main
      changes: *dependency_changes
    - <<: *mr
      changes: *dependency_changes

.rules:migration-test:
  rules:
    - <<: *main
      changes: *db_changes
    - <<: *mr
      changes: *db_changes

.rules:allure-reports:
  rules:
    - <<: *fork
      when: never
    - *mr
    - *main

.rules:coverage:
  rules:
    - <<: *fork
      when: never
    - *mr
    - *main

.rules:build-core-image:
  rules:
    - *core_update

.rules:build-image:
  rules:
    - <<: *mr
      changes: *dependency_changes
      variables:
        BUILD_PLATFORM: linux/amd64,linux/arm64 # build arm image on dependency updates
    - <<: *mr
      variables:
        BUILD_PLATFORM: linux/amd64
    - <<: *main
      variables:
        LATEST_TAG: latest
    - <<: *release
      variables:
        LATEST_TAG: latest
